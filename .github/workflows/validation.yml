name: 'Validation'

env:
  NODE_VERSION: '12' # Shipped with VS Code.

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cancel:
    if: github.repository == 'microsoft/pyrx' && github.event_name == 'pull_request'
    runs-on: ubuntu-18.04
    name: Cancel previous runs

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

  typecheck:
    if: github.repository == 'microsoft/pyrx'
    runs-on: ubuntu-18.04
    name: Typecheck

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm install

      - run: npx tsc --noEmit
      - run: npx lerna exec --stream --no-bail --ignore=pyright-root --concurrency=4 -- tsc --noEmit

  hygiene:
    if: github.repository == 'microsoft/pyrx'
    runs-on: ubuntu-18.04
    name: Hygiene

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm run install:all

      - name: Check diff after npm install
        run: git diff --exit-code --name-only

      - run: npm run check

      - run: npm run createindices
        working-directory: packages/pylance-internal

      - name: Check diff after createindices
        run: git diff --exit-code --name-only

  test:
    if: github.repository == 'microsoft/pyrx'
    strategy:
      fail-fast: false
      matrix:
        package:
          - name: pylance-internal
            path: packages/pylance-internal
          - name: pyright-internal
            path: packages/pyright/packages/pyright-internal
          - name: vscode-pylance
            path: packages/vscode-pylance
        os: [ubuntu-18.04, windows-2019, macos-10.15]

    name: Test (${{ matrix.package.name }} ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: typecheck

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Don't cache on Windows; the cache ends up being very large and
      # the Windows implementation of the cache task uses a much slower archiver.
      - name: Get npm cache directory
        if: runner.os != 'Windows'
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        if: runner.os != 'Windows'
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Get current VS Code version
        if: ${{ contains(matrix.package.path, 'vscode') }}
        id: vscode-cache
        shell: bash
        run: |
          echo "::set-output name=version::$(curl -s 'https://update.code.visualstudio.com/api/releases/stable' | jq -r '.[0]')"
      - name: Cache vscode-test
        if: ${{ contains(matrix.package.path, 'vscode') }}
        uses: actions/cache@v2
        with:
          path: packages/vscode-pylance/.vscode-test
          key: ${{ runner.os }}-vscode-test-v2-${{ steps.vscode-cache.outputs.version }}

      - run: npm install

      - uses: GabrielBB/xvfb-action@v1.4
        with:
          run: npm test
          working-directory: ${{ matrix.package.path }}
        if: ${{ contains(matrix.package.path, 'vscode') }}

      - run: npm test
        working-directory: ${{ matrix.package.path }}
        if: ${{ ! contains(matrix.package.path, 'vscode') }}

  required:
    runs-on: ubuntu-18.04
    name: Required
    needs:
      - typecheck
      - hygiene
      - test

    steps:
      - run: echo All required jobs succeeded.
