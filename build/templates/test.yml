parameters:
  name: ''
  workingDirectory: ''
  dependsOn: ''
  gui: false
  # coverage: false

jobs:
  - job: test_${{ parameters.name }}
    displayName: Test ${{ parameters.name }}
    dependsOn: ${{ parameters.dependsOn }}
    variables:
      DISPLAY: ':99.0'

    strategy:
      matrix:
        linux:
          imageName: 'ubuntu-18.04'
        mac:
          imageName: 'macOS-10.15'
        # windows-microbuild: # Internal only but faster; do not use for public PRs.
        #   poolName: 'VSEng-MicroBuildVS2019'
        windows:
          imageName: 'windows-2019'

    pool:
      name: $[variables.poolName]
      vmImage: $[variables.imageName]

    steps:
      - template: node.yml

      - bash: /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 & echo ">>> Started xvfb"
        displayName: Start xvfb
        condition: and(succeeded(), eq('${{ parameters.gui }}', 'true'), eq(variables['Agent.OS'], 'Linux'))

      - script: npm test
        displayName: npm test
        workingDirectory: ${{ parameters.workingDirectory }}
# - task: PublishPipelineArtifact@1
#   displayName: Publish Istanbul report as artifact
#   inputs:
#     targetPath: '$(System.DefaultWorkingDirectory)/server/coverage-merged'
#     artifact: '$(jobName)-server-coverage-merged'
#     publishLocation: 'pipeline'
#   condition: succeededOrFailed()
# - task: PublishTestResults@2
#   displayName: Publish test results
#   inputs:
#     testResultsFormat: 'JUnit'
#     testResultsFiles: '**/junit.xml'
#     testRunTitle: 'Test results for JavaScript'
#   condition: succeededOrFailed()
# - task: PublishCodeCoverageResults@1
#   displayName: Publish coverage results
#   inputs:
#     codeCoverageTool: Cobertura
#     summaryFileLocation: '$(System.DefaultWorkingDirectory)/server/coverage-merged/cobertura-coverage.xml'
#     failIfCoverageEmpty: true
#   condition: succeededOrFailed()
