{
    "name": "pyrx",
    "displayName": "PyRx",
    "description": "PyRx extension to VS Code (FOR DEBUGGING ONLY)",
    "version": "0.0.0",
    "private": true,
    "license": "MIT",
    "author": {
        "name": "Microsoft Corporation"
    },
    "publisher": "ms-pyrx",
    "repository": {
        "type": "git",
        "url": "https://github.com/Microsoft/pyrx"
    },
    "engines": {
        "vscode": "^1.43.0"
    },
    "keywords": [
        "python"
    ],
    "categories": [
        "Programming Languages"
    ],
    "activationEvents": [
        "onLanguage:python",
        "workspaceContains:**/pyrightconfig.json"
    ],
    "icon": "images/pyrx-icon.png",
    "main": "./out/src/extension",
    "contributes": {
        "languages": [
            {
                "id": "python",
                "aliases": [
                    "Python"
                ],
                "extensions": [
                    ".py",
                    ".pyi"
                ]
            }
        ],
        "configuration": {
            "type": "object",
            "title": "PyRx Configuration",
            "properties": {
                "python.analysis.typeshedPaths": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "description": "Paths to look for typeshed modules.",
                    "scope": "resource"
                },
                "python.analysis.stubPath": {
                    "type": "string",
                    "default": "",
                    "description": "Path to directory containing custom type stub files.",
                    "scope": "resource"
                },
                "python.analysis.diagnosticMode": {
                    "type": "string",
                    "default": "openFilesOnly",
                    "enum": [
                        "openFilesOnly",
                        "workspace"
                    ],
                    "enumDescriptions": [
                        "Analyzes and reports errors on only open files.",
                        "Analyzes and reports errors on all files in the workspace."
                    ],
                    "scope": "resource"
                },
                "python.analysis.diagnosticSeverityOverrides": {
                    "type": "object",
                    "default": {},
                    "description": "Allows a user to override the severity levels for individual diagnostics.",
                    "scope": "resource"
                },
                "python.analysis.extraPaths": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "description": "Additional import search resolution paths",
                    "scope": "resource"
                },
                "python.pythonPath": {
                    "type": "string",
                    "default": "python",
                    "description": "Path to Python, you can use a custom version of Python.",
                    "scope": "resource"
                },
                "python.venvPath": {
                    "type": "string",
                    "default": "",
                    "description": "Path to folder with a list of Virtual Environments.",
                    "scope": "resource"
                },
                "pyright.disableLanguageServices": {
                    "type": "boolean",
                    "default": false,
                    "description": "Disables type completion, definitions, and references.",
                    "scope": "resource"
                },
                "pyright.openFilesOnly": {
                    "type": "boolean",
                    "default": true,
                    "description": "Report errors only for currently-open files.",
                    "scope": "resource"
                },
                "pyright.useLibraryCodeForTypes": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use library implementations to extract type information when type stub is not present.",
                    "scope": "resource"
                }
            }
        },
        "jsonValidation": [
            {
                "fileMatch": "pyrightconfig.json",
                "url": "./schemas/pyrightconfig.schema.json"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run build",
        "build": "tsc -p ./",
        "update-vscode": "node ./node_modules/vscode/bin/install",
        "postinstall": "node ./node_modules/vscode/bin/install"
    },
    "devDependencies": {
        "typescript": "^3.9.5",
        "vsce": "^1.76.1",
        "vscode": "^1.1.37"
    },
    "dependencies": {
        "leven": "^3.1.0",
        "vscode-languageclient": "^7.0.0-next.6",
        "vscode-languageserver": "^7.0.0-next.4",
        "vscode-uri": "^2.1.2"
    }
}
