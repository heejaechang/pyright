{
    "name": "pyrx-server",
    "displayName": "PyRx",
    "description": "Python language server",
    "version": "0.1.0",
    "license": "MIT",
    "author": {
        "name": "Microsoft Corporation"
    },
    "publisher": "Microsoft Corporation",
    "repository": {
        "type": "git",
        "url": "https://github.com/Microsoft/pyrx"
    },
    "scripts": {
        "install:all": "npm run build:copyTypeshed && npm run build:copyBundledStubs && npm install && cd pyright && npm install && cd server && npm install && cd ../client && npm install && cd ..",
        "start": "npm i && npm run build:server",
        "build": "npm run build:server && npm run installServer",
        "build:server": "tsc",
        "build:copyTypeshed": "node ./copyTypeshedFallback.js",
        "build:copyBundledStubs": "node ./copyBundledStubs.js",
        "installServer": "node ./customInstallServerIntoExtension.js ../client ./package.json ./tsconfig.json ./package-lock.json",
        "eslint": "eslint ./**/*.ts",
        "tslint": "tslint --project tsconfig.json --fix",
        "watch": "tsc --watch",
        "test": "jest --detectOpenHandles --forceExit",
        "test:all": "npm run test && cd pyright/server && npm run test",
        "test:pipeline": "jest --detectOpenHandles --forceExit --reporters=jest-junit --reporters=default --coverage --coverageReporters=cobertura --coverageReporters=html --coverageReporters=json",
        "test:all:pipeline": "npm run test:pipeline && cd pyright/server && npm run test:pipeline && cd ../..",
        "posttest:all:pipeline": "npm run combine:coverage",
        "precombine:coverage": "shx mkdir -p reports .nyc_output && shx cp coverage/coverage-final.json reports/coverage-pyrx.json && shx cp pyright/server/coverage/coverage-final.json reports/coverage-pyright.json",
        "combine:coverage": "nyc merge reports .nyc_output/out.json && nyc report --reporter html --reporter cobertura  --exclude-after-remap=false --report-dir coverage-merged"
    },
    "dependencies": {
        "assert": "^2.0.0",
        "chalk": "^2.4.2",
        "chokidar": "^3.3.1",
        "command-line-args": "^5.1.1",
        "leven": "^3.1.0",
        "typescript-char": "^0.0.0",
        "vscode-languageserver": "^5.3.0-next.10",
        "vscode-uri": "^2.1.1"
    },
    "devDependencies": {
        "@types/chalk": "^2.2.0",
        "@types/chokidar": "^2.1.3",
        "@types/command-line-args": "^5.0.0",
        "@types/fs-extra": "^8.1.0",
        "@types/jest": "^24.9.1",
        "@types/node": "^12.12.28",
        "@typescript-eslint/eslint-plugin": "^2.21.0",
        "@typescript-eslint/parser": "^2.21.0",
        "eslint": "^6.8.0",
        "fs-extra": "^8.1.0",
        "jest": "^24.9.0",
        "jest-junit": "^10.0.0",
        "node-loader": "^0.6.0",
        "nyc": "^15.0.0",
        "shx": "^0.3.2",
        "ts-jest": "^24.3.0",
        "ts-loader": "^6.2.1",
        "tslint": "^5.20.1",
        "tslint-microsoft-contrib": "^6.2.0",
        "typescript": "^3.8.2",
        "webpack": "^4.41.6",
        "webpack-cli": "^3.3.11"
    },
    "types": "out/main.d.ts",
    "main": "out/main.js"
}
