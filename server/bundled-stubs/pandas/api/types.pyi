from typing import Any, List


def infer_dtype(value: Any, skipna: bool = ...) -> str: ...
def is_bool(obj: Any) -> bool: ...
def is_bool_dtype(obj: Any) -> bool: ...
def is_categorical(obj: Any) -> bool: ...
def is_categorical_dtype(obj: Any) -> bool: ...
def is_complex(obj: Any) -> bool: ...
def is_complex_dtype(obj: Any) -> bool: ...
def is_datetime64_dtype(obj: Any) -> bool: ...
def is_datetime64_any_dtype(obj: Any) -> bool: ...
def is_datetime64_ns_dtype(obj: Any) -> bool: ...
def is_datetime64tz_dtype(obj: Any) -> bool: ...
def is_dict_like(obj: Any) -> bool: ...
def is_extension_array_dtype(obj: Any) -> bool: ...
def is_file_like(obj: Any) -> bool: ...
def is_float(obj: Any) -> bool: ...
def is_float_dtype(obj: Any) -> bool: ...
def is_hashable(obj: Any) -> bool: ...
def is_int64_dtype(obj: Any) -> bool: ...
def is_integer(obj: Any) -> bool: ...
def is_integer_dtype(obj: Any) -> bool: ...
def is_interval(obj: Any) -> bool: ...
def is_interval_dtype(obj: Any) -> bool: ...
def is_iterator(obj: Any) -> bool: ...
def is_list_like(obj: Any) -> bool: ...
def is_named_tuple(obj: Any) -> bool: ...
def is_number(obj: Any) -> bool: ...
def is_numeric_dtype(obj: Any) -> bool: ...
def is_object_dtype(obj: Any) -> bool: ...
def is_period_dtype(obj: Any) -> bool: ...
def is_re(obj: Any) -> bool: ...
def is_re_compilable(obj: Any) -> bool: ...
def is_scalar(obj: Any) -> bool: ...
def is_signed_integer_dtype(obj: Any) -> bool: ...
def is_sparse(obj: Any) -> bool: ...
def is_string_dtype(obj: Any) -> bool: ...
def is_timedelta64_dtype(obj: Any) -> bool: ...
def is_timedelta64_ns_dtype(obj: Any) -> bool: ...
def is_unsigned_integer_dtype(obj: Any) -> bool: ...
def pandas_dtype(dtype: object) -> Any: ...
def union_categoricals(to_union: List, sort_categories: bool = ..., ignore_order: bool = ...) -> Any: ...
